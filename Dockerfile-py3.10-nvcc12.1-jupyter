# Dockerfile
# Specify an ML Runtime base image
FROM docker.repository.cloudera.com/cloudera/cdsw/ml-runtime-jupyterlab-python3.10-cuda:2023.08.2-b8
# Install cuda-toolkit in the new imag
RUN \
    # Update nvidia GPG key
    rm /etc/apt/sources.list.d/cuda.list && \
    apt-key del 7fa2af80 && \
    apt-get update && apt-get install -y --no-install-recommends wget && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb && \
    dpkg -i cuda-keyring_1.0-1_all.deb && \
    apt-get update
RUN apt-get install -y libcusparse-dev-12-1
RUN apt-get install -y libcublas-dev-12-1
RUN apt-get install -y libcusolver-dev-12-1
RUN apt-get install -y libcurand-dev-12-1
RUN apt-get install -y pdsh
RUN apt-get install -y libaio-dev
#RUN apt list --installed | grep cusparse
RUN apt-get install -y cuda-nvcc-12-1 && apt-get clean && rm -rf /var/lib/apt/lists/*
# Override Runtime label and environment variables metadata
ENV ML_RUNTIME_EDITION="ssh-nvcc 12.1" \
       	ML_RUNTIME_SHORT_VERSION="1.0" \
        ML_RUNTIME_MAINTENANCE_VERSION=1 \
        ML_RUNTIME_DESCRIPTION="This runtime includes cuda-nvcc-12-1 and upgraded packages"
ENV ML_RUNTIME_FULL_VERSION="${ML_RUNTIME_SHORT_VERSION}.${ML_RUNTIME_MAINTENANCE_VERSION}"
LABEL com.cloudera.ml.runtime.edition=$ML_RUNTIME_EDITION \
        com.cloudera.ml.runtime.full-version=$ML_RUNTIME_FULL_VERSION \
        com.cloudera.ml.runtime.short-version=$ML_RUNTIME_SHORT_VERSION \
        com.cloudera.ml.runtime.maintenance-version=$ML_RUNTIME_MAINTENANCE_VERSION \
        com.cloudera.ml.runtime.description=$ML_RUNTIME_DESCRIPTION

# Configure SSHD.
# SSH login fix. Otherwise user is kicked off after login
RUN apt-get install -y openssh-server
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd
RUN mkdir /var/run/sshd
RUN bash -c 'install -m755 <(printf "#!/bin/sh\nexit 0") /usr/sbin/policy-rc.d'
#RUN ex +'%s/^#\zeListenAddress/\1/g' -scwq /etc/ssh/sshd_config
#RUN ex +'%s/^#\zeHostKey .*ssh_host_.*_key/\1/g' -scwq /etc/ssh/sshd_config
RUN RUNLEVEL=1 dpkg-reconfigure openssh-server
RUN ssh-keygen -A -v
RUN update-rc.d ssh defaults

#RUN ex +"%s/^%sudo.*$/%sudo ALL=(ALL:ALL) NOPASSWD:ALL/g" -scwq! /etc/sudoers
# Generate and configure user keys.
USER cdsw
RUN ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519
RUN cat ~/.ssh/id_ed25519
RUN cp ~/.ssh/id_ed25519.pub /home/cdsw/.ssh/authorized_keys
RUN chmod 700 /home/cdsw/.ssh/authorized_keys
RUN chown cdsw:cdsw /home/cdsw/.ssh/authorized_keys
#COPY --chown=cdsw:cdsw "./files/authorized_keys" /home/cdsw/.ssh/authorized_keys

# Setup default command and/or parameters.
EXPOSE 22
CMD ["/usr/bin/sudo", "/usr/sbin/sshd", "-D", "-o", "ListenAddress=0.0.0.0"]
